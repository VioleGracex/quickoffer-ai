import openai
import logging
from app.core.config import settings

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def generate_proposal_text(client_info, template_text, product_data_text, selected_products, model="gpt-4-turbo", api="openai"):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å OpenAI –∏–ª–∏ DeepSeek."""

    prompt = f"""
    –ü–µ—Ä—Å–æ–Ω–∞:
    –ò–º—è: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
    –ö–æ–º–ø–∞–Ω–∏—è: {client_info.get('companyName', '')}
    –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: {client_info.get('legalAddress', '')}
    –ò–ù–ù: {client_info.get('inn', '')}
    –†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç: {client_info.get('bankAccount', '')}
    –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞: {client_info.get('bankName', '')}
    –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: {client_info.get('clientName', '')}
    –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: {client_info.get('contactPerson', '')}
    –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: {client_info.get('productName', '')}
    –¢–∞—Ä–∏—Ñ: {client_info.get('pricingPlan', '')}
    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏—Ü–µ–Ω–∑–∏–π: {client_info.get('quantity', '')}
    
    –¢–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞: {template_text}
    –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö: {product_data_text}
    
    –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: {", ".join(selected_products)}
    
    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
    
    –£—á–µ–±–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ:
    –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –≥–æ—Ç–æ–≤–∏—Ç–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç –ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –í–∫–ª—é—á–∏—Ç–µ –≤ —Ç–µ–∫—Å—Ç –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–∫–∏–¥–∫–∏. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º –∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º.
    
    ===
    
    –ù–∞—á–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∏–∂–µ:
    """

    logger.info("üìå –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")
    logger.debug(f"üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π prompt:\n{prompt}")

    try:
        if api == "openai":
            client = openai.OpenAI(api_key=settings.OPENAI_API_KEY)
            response = client.chat.completions.create(
                model=model,
                messages=[
                    {"role": "system", "content": "–í—ã –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –≥–æ—Ç–æ–≤–∏—Ç–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º –∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º."},
                    {"role": "user", "content": prompt},
                ],
                max_tokens=500,
                stop=["==="]
            )
        elif api == "deepseek":
            client = openai.OpenAI(api_key=settings.DEEPSEEK_API_KEY, base_url="https://api.deepseek.com/v1")
            response = client.chat.completions.create(
                model=model,
                messages=[
                    {"role": "system", "content": "–í—ã –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –≥–æ—Ç–æ–≤–∏—Ç–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º –∏ —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º."},
                    {"role": "user", "content": prompt},
                ],
                stream=False
            )
        else:
            raise ValueError("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π API: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'openai' –∏–ª–∏ 'deepseek'.")

        return response.choices[0].message.content.strip()

    except openai.OpenAIError as e:
        logger.error(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: {str(e)}")
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}")

    except Exception as e:
        logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: {str(e)}")
